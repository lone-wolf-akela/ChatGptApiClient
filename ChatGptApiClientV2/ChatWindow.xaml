<hc:Window x:Name="Window" x:Class="ChatGptApiClientV2.ChatWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:hc="https://handyorg.github.io/handycontrol"
        xmlns:local="clr-namespace:ChatGptApiClientV2"
        xmlns:markdig="clr-namespace:Markdig.Wpf;assembly=Markdig.Wpf"
        xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
        mc:Ignorable="d" SystemBackdropType="Mica" Icon="/chatgpt-icon.ico"
        Title="ChatWindow" Height="600" Width="1000">
    <FrameworkElement.CommandBindings>
        <CommandBinding Command="{x:Static markdig:Commands.Hyperlink}" Executed="OpenHyperlink"/>
    </FrameworkElement.CommandBindings>
    <Grid Margin="10,10,10,0" DataContext="{Binding ElementName=Window, Mode=OneWay}">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*" MinHeight="100"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="150" MinHeight="150"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <DockPanel Grid.Row="0" Margin="0,0,0,5">
            <Button x:Name="BtnSettings" DockPanel.Dock="Right" Click="btn_settings_Click" ToolTip="其他设置">
                <Button.Triggers>
                    <EventTrigger RoutedEvent="MouseEnter">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="TxtSettings" 
                                   Storyboard.TargetProperty="RenderTransform.Angle"
                                   By="360" Duration="0:0:1"
                                   AutoReverse="False" RepeatBehavior="Forever"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="MouseLeave">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="TxtSettings" 
                                   Storyboard.TargetProperty="RenderTransform.Angle"
                                   To="360" Duration="0:0:0"
                                   AutoReverse="False"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Button.Triggers>
                <TextBlock x:Name="TxtSettings" Text="&#xe713;" FontFamily="./font/#Segoe Fluent Icons" FontSize="{StaticResource SubHeadFontSize}"
                           RenderTransformOrigin="0.5,0.5">
                    <TextBlock.RenderTransform>
                        <RotateTransform Angle="0"/>
                    </TextBlock.RenderTransform>
                </TextBlock>
            </Button>
            <StackPanel Orientation="Horizontal">
                <StackPanel Margin="0,0,10,0" Orientation="Horizontal">
                    <Label MinWidth="50" Content="模型" Margin="0,0,0,0"/>
                    <ComboBox x:Name="CbxModel" Width="200" ItemsSource="{Binding State.Config.ModelOptions}" SelectedIndex="{Binding State.Config.SelectedModelIndex, Mode=TwoWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Description}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>
                <StackPanel Margin="0,0,25,0" Orientation="Horizontal">
                    <Label MinWidth="50" Content="版本" Margin="0,0,0,0"/>
                    <ComboBox x:Name="CbxModelVersion" Width="200" ItemsSource="{Binding State.Config.ModelVersionOptions}" SelectedIndex="{Binding State.Config.SelectedModelVersionIndex, Mode=TwoWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Description}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>
                <ToggleButton x:Name="TgglPlugin" Margin="0,0,15,0">
                    <StackPanel>
                        <TextBlock Text="选择插件"/>
                        <Popup IsOpen="{Binding IsChecked, ElementName=TgglPlugin}" AllowsTransparency="True" StaysOpen="False">
                            <Border CornerRadius="5" BorderThickness="1" BorderBrush="{DynamicResource RegionBrush}" Background="{DynamicResource RegionBrush}" Margin="0,0,8,8" Padding="2">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="5" Opacity="0.4"/>
                                </Border.Effect>
                                <ListBox x:Name="LstPlugin" Background="Transparent" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemsSource="{Binding Path=State.Plugins, Mode=OneWay}" IsEnabled="{Binding State.Config.SelectedModelSupportTools}">
                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="ListBoxItem" BasedOn="{StaticResource ListBoxItemBaseStyle}">
                                            <Setter Property="Padding" Value="3,3,3,3"/>
                                        </Style>
                                    </ListBox.ItemContainerStyle>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <CheckBox Content="{Binding Name}" IsChecked="{Binding IsEnabled, Mode=TwoWay}"/>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </Border>
                        </Popup>
                    </StackPanel>
                </ToggleButton>
                <ToggleButton x:Name="TgglPrompt" Margin="0,0,15,0">
                    <StackPanel>
                        <TextBlock Text="初始提示词"/>
                        <Popup IsOpen="{Binding IsChecked, ElementName=TgglPrompt}" AllowsTransparency="True" StaysOpen="False">
                            <Border CornerRadius="5" BorderThickness="1" BorderBrush="{DynamicResource RegionBrush}" Background="{DynamicResource RegionBrush}" Margin="0,0,8,8" Padding="2">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="5" Opacity="0.4"/>
                                </Border.Effect>
                                <ListBox x:Name="LstPrompt" 
                                          ItemsSource="{Binding State.InitialPrompts.PromptsOptions}"
                                          SelectedItem="{Binding State.InitialPrompts.SelectedOption}">
                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="ListBoxItem" BasedOn="{StaticResource ListBoxItemBaseStyle}">
                                            <EventSetter Event="MouseLeftButtonUp" Handler="ClosePromptPopup"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
                                                    <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ListBox.ItemContainerStyle>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock TextWrapping="Wrap" Width="700" Text="{Binding Text}"/>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </Border>
                        </Popup>
                    </StackPanel>
                </ToggleButton>
                <CheckBox x:Name="ChkMarkdown" IsChecked="{Binding State.Config.EnableMarkdown}" Content="Markdown格式化" Click="chk_markdown_Click"/>
            </StackPanel>
        </DockPanel>
        <GridSplitter Grid.Row="2" Height="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{DynamicResource BorderBrush}"/>
        <DockPanel Grid.Row="3" Margin="0,5,0,0">
            <StackPanel DockPanel.Dock="Right" VerticalAlignment="Bottom">
                <UniformGrid Columns="3" Rows="2" Margin="0,0,0,10">
                    <Button x:Name="BtnReset" Click="btn_reset_Click" FontFamily="./font/#Segoe Fluent Icons" FontSize="{StaticResource SubHeadFontSize}" Content="&#xE72C;" ToolTip="重置对话（清空当前对话历史）" Margin="0,0,2.5,2.5" Height="30" Width="30" Padding="0"/>
                    <Button x:Name="BtnSave"  Click="btn_save_Click" FontFamily="./font/#Segoe Fluent Icons" FontSize="{StaticResource SubHeadFontSize}" Content="&#xe78c;" ToolTip="保存对话历史" Margin="2.5,0,2.5,2.5" Height="30" Width="30" Padding="0"/>
                    <Button x:Name="BtnLoad"  Click="btn_load_Click" FontFamily="./font/#Segoe Fluent Icons" FontSize="{StaticResource SubHeadFontSize}" Content="&#xe8da;" ToolTip="载入对话历史" Margin="2.5,0,0,2.5" Height="30" Width="30" Padding="0"/>
                    <Button x:Name="BtnPrint"  Click="btn_print_Click" FontFamily="./font/#Segoe Fluent Icons" FontSize="{StaticResource SubHeadFontSize}" Content="&#xe749;" ToolTip="打印对话历史" Margin="0,2.5,2.5,0" Height="30" Width="30" Padding="0"/>
                    <Button x:Name="BtnScreenshot"  Click="btn_screenshot_Click" FontFamily="./font/#Segoe Fluent Icons" FontSize="{StaticResource SubHeadFontSize}" Content="&#xe91b;" ToolTip="导出长截图" Margin="2.5,2.5,2.5,0" Height="30" Width="30" Padding="0"/>
                </UniformGrid>
                <Button x:Name="BtnSend" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" MinHeight="50" MinWidth="100" Click="btn_send_Click">
                    <TextBlock TextAlignment="Center">
                        发送<LineBreak/>Ctrl + Enter
                    </TextBlock>
                </Button>
            </StackPanel>
            <DockPanel Margin="0,0,5,0">
                <StackPanel DockPanel.Dock="Bottom" Visibility="{Binding IsFileAttachmentsEmpty, Converter={StaticResource Boolean2VisibilityReConverter}}">
                    <ListBox x:Name="LstFiles" Background="Transparent" ItemsSource="{Binding FileAttachments}" BorderThickness="0" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Hidden">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem" BasedOn="{StaticResource ListBoxItemBaseStyle}">
                                <Setter Property="Focusable" Value="false"/>
                                <Setter Property="Padding" Value="3,3,3,3"/>
                                <Setter Property="Background" Value="Transparent"/>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <hc:SimplePanel>
                                    <Image Source="{Binding Icon}" Height="32" Width="32" Stretch="Uniform" ToolTip="{Binding Path}" Margin="0,3,3,0"/>
                                    <ContentControl x:Name="btn_removefile" MouseLeftButtonUp="btn_removefile_MouseLeftButtonUp">
                                        <hc:SimplePanel Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}, Converter={StaticResource Boolean2VisibilityConverter}}">
                                            <TextBlock FontFamily="./font/#Segoe Fluent Icons" Text="&#xF136;" VerticalAlignment="Top" HorizontalAlignment="Right" Foreground="White" Background="Transparent"/>
                                            <TextBlock FontFamily="./font/#Segoe Fluent Icons" Text="&#xF137;" VerticalAlignment="Top" HorizontalAlignment="Right" Foreground="Red" Background="Transparent"/>
                                            <TextBlock FontFamily="./font/#Segoe Fluent Icons" Text="&#xF13D;" VerticalAlignment="Top" HorizontalAlignment="Right" Foreground="White" Background="Transparent"/>
                                        </hc:SimplePanel>
                                    </ContentControl>
                                </hc:SimplePanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <CheckBox Content="以高分辨率解析图片" IsChecked="{Binding State.Config.UploadHiresImage}" Margin="3,0,0,0"/>
                </StackPanel>
                <hc:SimplePanel>
                    <TextBox x:Name="TxtInput" FontFamily="Segoe UI, Microsoft YaHei UI" VerticalContentAlignment="Top" TextWrapping="WrapWithOverflow" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" Padding="5"/>
                    <TextBlock x:Name="TxtInputPlaceholder" Text="在此输入对话内容" FontFamily="Segoe UI, Microsoft YaHei UI" Foreground="Gray" Visibility="{Binding Text.Length, ElementName=TxtInput, Converter={local:Int2VisibilityReConverter}}" VerticalAlignment="Top" TextWrapping="WrapWithOverflow" Margin="5"/>
                    <Button x:Name="BtnAddfile" FontFamily="./font/#Segoe Fluent Icons" FontSize="{StaticResource SubHeadFontSize}" Content="&#xE723;" ToolTip="添加附件（图片或TXT文档）" VerticalAlignment="Bottom" Margin="0,0,5,5" Padding="0" HorizontalAlignment="Right" Height="30" Width="30" Click="btn_addfile_Click"/>
                </hc:SimplePanel>
            </DockPanel>
        </DockPanel>
        <hc:SimplePanel Grid.Row="1" Margin="0,0,0,5" >
            <ListBox x:Name="LstMsg" Background="{DynamicResource RegionBrush}" ScrollViewer.VerticalScrollBarVisibility="Auto"
                  ItemsSource="{Binding Path=MessageList.Messages, Mode=OneWay}"
                  ScrollViewer.CanContentScroll="False">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Focusable" Value="false"/>
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <ContentPresenter />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <hc:SimplePanel>
                            <DockPanel Margin="0,0,0,10" MaxWidth="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}">
                                <svgc:SvgViewbox x:Name="AvatarLeft" Visibility="{Binding Path=ShowLeftAvatar, Converter={StaticResource Boolean2VisibilityConverter}}" Margin="15,0,5,0" Source="{Binding Avatar}" DockPanel.Dock="Left" Width="32" Height="32" VerticalAlignment="Top"/>
                                <hc:SimplePanel x:Name="AvatarLeftPlaceHolder" Visibility="{Binding Path=ShowLeftBlank, Converter={StaticResource Boolean2VisibilityConverter}}" Margin="15,0,5,0" DockPanel.Dock="Left" Width="64" Height="32" VerticalAlignment="Top"/>
                                <hc:Gravatar x:Name="AvatarRight" Id="{Binding UserAvatarSource}" DockPanel.Dock="Right" Width="32" Height="32" VerticalAlignment="Top" Margin="5,0,15,0" Visibility="{Binding Path=ShowRightAvatar, Converter={StaticResource Boolean2VisibilityConverter}}"/>
                                <hc:SimplePanel x:Name="AvatarRightPlaceHolder" Visibility="{Binding Path=ShowRightBlank, Converter={StaticResource Boolean2VisibilityConverter}}" Margin="5,0,15,0" DockPanel.Dock="Right" Width="64" Height="32" VerticalAlignment="Top"/>
                                <DockPanel>
                                    <Path x:Name="RightTail" DockPanel.Dock="Right" Data="{StaticResource StraightBubbleTailGeometry}" Fill="{Binding BackgroundColor}" 
                                          Stretch="Uniform" VerticalAlignment="Top" Margin="-2,16,0,0" 
                                          Visibility="{Binding Path=ShowRightAvatar, Converter={StaticResource Boolean2VisibilityConverter}}"
                                          Width="15" Height="15" RenderTransformOrigin="0.5,0.5">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <RotateTransform Angle="270"/>
                                                <ScaleTransform ScaleX="1" />
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                    <Path x:Name="LeftTail" DockPanel.Dock="Left" Data="{StaticResource StraightBubbleTailGeometry}" Fill="{Binding BackgroundColor}" 
                                          Stretch="Uniform" VerticalAlignment="Top" Margin="0,16,-2,0" 
                                          Visibility="{Binding Path=ShowLeftAvatar, Converter={StaticResource Boolean2VisibilityConverter}}"
                                          Width="15" Height="15" RenderTransformOrigin="0.5,0.5">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <RotateTransform Angle="270"/>
                                                <ScaleTransform ScaleX="-1" />
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                    <Border CornerRadius="5" Background="{Binding BackgroundColor}">
                                        <FlowDocumentScrollViewer Style="{x:Null}" 
                                                              Document="{Binding Path=RenderedMessage}" 
                                                              IsToolBarVisible="False" 
                                                              VerticalScrollBarVisibility="Hidden"
                                                              PreviewMouseWheel="ScrollToParentProcecssor">
                                        </FlowDocumentScrollViewer>
                                    </Border>
                                </DockPanel>
                            </DockPanel>
                        </hc:SimplePanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <d:ListBox.ItemsSource>
                    <x:Array Type="{x:Type local:ChatWindowMessage}">
                        <local:ChatWindowMessage Role="User" Message="# User Messages 1"/>
                        <local:ChatWindowMessage Role="System" Message="System Messages 2"/>
                        <local:ChatWindowMessage Role="Tool" Message="Tool Messages 1"/>
                        <local:ChatWindowMessage Role="Assistant" Message="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."/>
                    </x:Array>
                </d:ListBox.ItemsSource>
            </ListBox>
            <hc:SimplePanel Background="#88ffffff" Visibility="{Binding IsLoading, Converter={StaticResource Boolean2VisibilityConverter}}" d:IsHidden="True">
                <hc:LoadingCircle x:Name="LoadingCircle" IsRunning="True" Width="64" Height="64" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </hc:SimplePanel>
        </hc:SimplePanel>
        <StatusBar Grid.Row="4" Margin="0,5,0,0">
            <StatusBarItem Content="状态："/>
            <StatusBarItem Content="{Binding Path=State.NetStatus.StatusText}" Foreground="{Binding Path=State.NetStatus.StatusColor}" MinWidth="200"/>
            <Separator/>
            <StatusBarItem Content="系统指纹："/>
            <StatusBarItem Content="{Binding Path=State.NetStatus.SystemFingerprint}" Foreground="{Binding Path=State.NetStatus.StatusColor}"/>
        </StatusBar>
    </Grid>
</hc:Window>
