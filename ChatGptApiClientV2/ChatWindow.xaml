<Window x:Name="window" x:Class="ChatGptApiClientV2.ChatWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:hc="https://handyorg.github.io/handycontrol"
        xmlns:local="clr-namespace:ChatGptApiClientV2"
        xmlns:markdig="clr-namespace:Markdig.Wpf;assembly=Markdig.Wpf"
        xmlns:jd="clr-namespace:Jdenticon.Wpf;assembly=Jdenticon.Wpf"
        xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
        mc:Ignorable="d"
        Title="ChatWindow" Height="600" Width="1000">
    <Window.Resources>
        <local:ContainerWidthConverter x:Key="ContainerWidthConverter" />
    </Window.Resources>
    <FrameworkElement.CommandBindings>
        <CommandBinding Command="{x:Static markdig:Commands.Hyperlink}" Executed="OpenHyperlink"/>
    </FrameworkElement.CommandBindings>
    <Grid Margin="10,10,10,0" DataContext="{Binding ElementName=window, Mode=OneWay}">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*" MinHeight="100"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="150" MinHeight="100"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <DockPanel Grid.Row="0" Margin="0,0,0,5">
            <Button x:Name="btn_settings" DockPanel.Dock="Right" Content="其他设置" MinWidth="100" Click="btn_settings_Click"/>
            <StackPanel Orientation="Horizontal">
                <StackPanel Grid.Column="0" Grid.Row="1" Margin="0,0,10,0" Orientation="Horizontal">
                    <Label MinWidth="50" Content="模型" BorderBrush="{x:Null}" Margin="0,0,0,0"/>
                    <ComboBox x:Name="cbx_model" MinWidth="200" ItemsSource="{Binding State.Config.ModelOptions}" SelectedIndex="{Binding State.Config.SelectedModelIndex, Mode=TwoWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Description}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>
                <StackPanel Grid.Column="0" Grid.Row="2" Margin="0,0,25,0" Orientation="Horizontal">
                    <Label MinWidth="50" Content="版本" BorderBrush="{x:Null}" Grid.Row="2" Grid.Column="0" Margin="0,0,0,0"/>
                    <ComboBox x:Name="cbx_model_version" MinWidth="200" ItemsSource="{Binding State.Config.ModelVersionOptions}" SelectedIndex="{Binding State.Config.SelectedModelVersionIndex, Mode=TwoWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Description}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>
                <ToggleButton x:Name="tggl_plugin" Margin="0,0,15,0">
                    <StackPanel>
                        <TextBlock Text="选择插件"/>
                        <Popup IsOpen="{Binding IsChecked, ElementName=tggl_plugin}" AllowsTransparency="True" StaysOpen="False">
                            <Border CornerRadius="5" BorderThickness="1" BorderBrush="White" Background="White" Margin="0,0,8,8" Padding="5">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="5" Opacity="0.4"/>
                                </Border.Effect>
                                <ListView x:Name="lst_plugin" Background="Transparent" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemsSource="{Binding Path=State.Plugins, Mode=OneWay}" IsEnabled="{Binding State.Config.SelectedModelSupportTools}">
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem" BasedOn="{StaticResource ListBoxItemBaseStyle}">
                                            <Setter Property="Padding" Value="3,3,3,3"/>
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <CheckBox Content="{Binding Name}" IsChecked="{Binding IsEnabled, Mode=TwoWay}"/>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </Border>
                        </Popup>
                    </StackPanel>
                </ToggleButton>
                <ToggleButton x:Name="tggl_prompt" Margin="0,0,15,0">
                    <StackPanel>
                        <TextBlock Text="初始提示词"/>
                        <Popup IsOpen="{Binding IsChecked, ElementName=tggl_prompt}" AllowsTransparency="True" StaysOpen="False">
                            <Border CornerRadius="5" BorderThickness="1" BorderBrush="White" Background="White" Margin="0,0,8,8" Padding="5">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="5" Opacity="0.4"/>
                                </Border.Effect>
                                <ListBox x:Name="lst_prompt" 
                                          Background="Transparent" 
                                          ItemsSource="{Binding State.InitialPrompts.PromptsOptions}"
                                          SelectedItem="{Binding State.InitialPrompts.SelectedOption}">
                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="ListBoxItem">
                                            <EventSetter Event="MouseLeftButtonUp" Handler="ClosePromptPopup"/>
                                        </Style>
                                    </ListBox.ItemContainerStyle>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock TextWrapping="Wrap" Width="700" Text="{Binding Text}"/>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </Border>
                        </Popup>
                    </StackPanel>
                </ToggleButton>
                <CheckBox x:Name="chk_markdown" IsChecked="{Binding State.Config.EnableMarkdown}" Content="Markdown格式化" Click="chk_markdown_Click"/>
            </StackPanel>
        </DockPanel>
        <GridSplitter Grid.Row="2" Height="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
        <DockPanel Grid.Row="3" Margin="0,5,0,0">
            <StackPanel DockPanel.Dock="Right" VerticalAlignment="Bottom">
                <UniformGrid Columns="3" Rows="1" Margin="0,0,0,10">
                    <Button x:Name="btn_reset" Click="btn_reset_Click" FontFamily="Segoe MDL2 Assets" Content="&#xE72C;" ToolTip="重置对话（清空当前对话历史）" Margin="0,0,5,0" Height="30" Width="30" Padding="0"/>
                    <Button x:Name="btn_save"  Click="btn_save_Click" FontFamily="Segoe MDL2 Assets" Content="&#xE74E;" ToolTip="保存对话历史" Margin="0,0,5,0" Height="30" Width="30" Padding="0"/>
                    <Button x:Name="btn_load"  Click="btn_load_Click" FontFamily="Segoe MDL2 Assets" Content="&#xE8E5;" ToolTip="载入对话历史" Margin="0,0,0,0" Height="30" Width="30" Padding="0"/>
                </UniformGrid>
                <Button x:Name="btn_send" Content="发送" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" MinHeight="50" MinWidth="100" Click="btn_send_Click"/>
            </StackPanel>
            <DockPanel Margin="0,0,5,0">
                <StackPanel DockPanel.Dock="Bottom" Visibility="{Binding IsFileAttachmentsNotEmpty, Converter={local:BoolToVisibilityConverter}}">
                    <ListView x:Name="lst_files"  Background="Transparent" ItemsSource="{Binding FileAttachments}" BorderThickness="0" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Hidden">
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem" BasedOn="{StaticResource ListBoxItemBaseStyle}">
                                <Setter Property="Focusable" Value="false"/>
                                <Setter Property="Padding" Value="3,3,3,3"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Image Source="{Binding Icon}" Height="32" Width="32" Stretch="Uniform" ToolTip="{Binding Path}" Margin="0,3,3,0"/>
                                    <ContentControl x:Name="btn_removefile" MouseLeftButtonUp="btn_removefile_MouseLeftButtonUp">
                                        <Grid Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Converter={local:BoolToVisibilityConverter}}">
                                            <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xF136;" VerticalAlignment="Top" HorizontalAlignment="Right" Foreground="White" Background="Transparent"/>
                                            <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xF137;" VerticalAlignment="Top" HorizontalAlignment="Right" Foreground="Red" Background="Transparent"/>
                                            <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xF13D;" VerticalAlignment="Top" HorizontalAlignment="Right" Foreground="White" Background="Transparent"/>
                                        </Grid>
                                    </ContentControl>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <CheckBox Content="以高分辨率解析图片" IsChecked="{Binding State.Config.UploadHiresImage}" Margin="3,0,0,0"/>
                </StackPanel>
                <Grid>
                    <TextBox x:Name="txt_input" Text="在此输入对话内容" VerticalContentAlignment="Top" TextWrapping="WrapWithOverflow" AcceptsReturn="True" GotFocus="txt_input_GotFocus" VerticalScrollBarVisibility="Auto"/>
                    <Button x:Name="btn_addfile" FontFamily="Segoe MDL2 Assets" Content="&#xE723;" ToolTip="添加附件（图片或TXT文档）" VerticalAlignment="Bottom" Margin="0,0,5,5" HorizontalAlignment="Right" Height="30" Width="30" Click="btn_addfile_Click"/>
                </Grid>
            </DockPanel>
        </DockPanel>
        <ListView Grid.Row="1" x:Name="lst_msg" ScrollViewer.CanContentScroll="False" Background="White" Margin="0,0,0,5" ItemsSource="{Binding Path=Messages, Mode=OneWay}" ScrollViewer.VerticalScrollBarVisibility="Auto">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="Focusable" Value="false"/>
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <DockPanel Margin="0,0,0,10" MaxWidth="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type ListView}}, Converter={StaticResource ContainerWidthConverter}}">
                            <svgc:SvgViewbox x:Name="AvatarLeft" Visibility="{Binding Path=ShowLeftAvatar, Converter={local:BoolToVisibilityConverter}}" Margin="0,0,10,0" Source="{Binding Avatar}" DockPanel.Dock="Left" Width="32" Height="32" VerticalAlignment="Top"/>
                            <Grid x:Name="AvatarLeftPlaceHolder" Visibility="{Binding Path=ShowLeftBlank, Converter={local:BoolToVisibilityConverter}}" Margin="0,0,10,0" DockPanel.Dock="Left" Width="64" Height="32" VerticalAlignment="Top"/>
                            <Border BorderBrush="LightGray" CornerRadius="5" BorderThickness="1" Visibility="{Binding Path=ShowRightAvatar, Converter={local:BoolToVisibilityConverter}}" DockPanel.Dock="Right" Width="32" Height="32" VerticalAlignment="Top" Margin="10,0,0,0" >
                                <jd:IdenticonElement x:Name="AvatarRight" Value="{Binding UserAvatarSource}" Background="Transparent"/>
                            </Border>
                            <Grid x:Name="AvatarRightPlaceHolder" Visibility="{Binding Path=ShowRightBlank, Converter={local:BoolToVisibilityConverter}}" Margin="10,0,0,0" DockPanel.Dock="Right" Width="64" Height="32" VerticalAlignment="Top"/>
                            <Border CornerRadius="5" Background="{Binding BackgroundColor}">
                                <FlowDocumentScrollViewer Style="{x:Null}" 
                                                          Document="{Binding Path=RenderedMessage}" 
                                                          IsToolBarVisible="False" 
                                                          VerticalScrollBarVisibility="Hidden"
                                                          PreviewMouseWheel="SmoothScrollProcecssor">
                                </FlowDocumentScrollViewer>
                            </Border>
                        </DockPanel>
                    </Grid>
                </DataTemplate>
                
            </ListView.ItemTemplate>
            <d:ListView.ItemsSource>
                <x:Array Type="{x:Type local:ChatWindowMessage}">
                    <local:ChatWindowMessage Role="User" Message="# User Messages 1"/>
                    <local:ChatWindowMessage Role="System" Message="System Messages 2"/>
                    <local:ChatWindowMessage Role="Tool" Message="Tool Messages 1"/>
                    <local:ChatWindowMessage Role="Assistant" Message="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."/>
                </x:Array>
            </d:ListView.ItemsSource>
        </ListView>
        <StatusBar Grid.Row="4" Margin="0,5,0,0">
            <StatusBarItem Content="状态："/>
            <StatusBarItem Content="{Binding Path=State.NetStatus.StatusText}" Foreground="{Binding Path=State.NetStatus.StatusColor}" MinWidth="200"/>
            <Separator/>
            <StatusBarItem Content="系统指纹："/>
            <StatusBarItem Content="{Binding Path=State.NetStatus.SystemFingerprint}" Foreground="{Binding Path=State.NetStatus.StatusColor}"/>
        </StatusBar>
    </Grid>
</Window>
