
#nullable enable

namespace Gemini
{
    /// <summary>
    /// Code generated by the model that is meant to be executed, and the result<br/>
    /// returned to the model.<br/>
    /// Only generated when using the `CodeExecution` tool, in which the code will<br/>
    /// be automatically executed, and a corresponding `CodeExecutionResult` will<br/>
    /// also be generated.
    /// </summary>
    public sealed partial class ExecutableCode
    {
        /// <summary>
        /// Required. Programming language of the `code`.
        /// </summary>
        [global::System.Text.Json.Serialization.JsonPropertyName("language")]
        [global::System.Text.Json.Serialization.JsonConverter(typeof(global::Gemini.JsonConverters.ExecutableCodeLanguageJsonConverter))]
        [global::System.Text.Json.Serialization.JsonRequired]
        public required global::Gemini.ExecutableCodeLanguage Language { get; set; }

        /// <summary>
        /// Required. The code to be executed.
        /// </summary>
        [global::System.Text.Json.Serialization.JsonPropertyName("code")]
        [global::System.Text.Json.Serialization.JsonRequired]
        public required string Code { get; set; }

        /// <summary>
        /// Additional properties that are not explicitly defined in the schema
        /// </summary>
        [global::System.Text.Json.Serialization.JsonExtensionData]
        public global::System.Collections.Generic.IDictionary<string, object> AdditionalProperties { get; set; } = new global::System.Collections.Generic.Dictionary<string, object>();

        /// <summary>
        /// Initializes a new instance of the <see cref="ExecutableCode" /> class.
        /// </summary>
        /// <param name="language">
        /// Required. Programming language of the `code`.
        /// </param>
        /// <param name="code">
        /// Required. The code to be executed.
        /// </param>
#if NET7_0_OR_GREATER
        [global::System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
        public ExecutableCode(
            global::Gemini.ExecutableCodeLanguage language,
            string code)
        {
            this.Language = language;
            this.Code = code ?? throw new global::System.ArgumentNullException(nameof(code));
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ExecutableCode" /> class.
        /// </summary>
        public ExecutableCode()
        {
        }
    }
}